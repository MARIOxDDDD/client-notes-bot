import os
import json
import time
import logging
from flask import Flask, request, send_file
from waitress import serve
import pandas as pd
import telebot
from telebot import types

# ========== –ù–ê–°–¢–†–û–ô–ö–ê ==========
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

TOKEN = "8036531554:AAGyyLFsy8LyW--jPsdZuqnSl-3AfcAFWz0"
WEBHOOK_URL = "https://clientnotesmarioxd.onrender.com/8036531554:AAGyyLFsy8LyW--jPsdZuqnSl-3AfcAFWz0"
JSON_FILE = "clients.json"
EXCEL_FILE = "clients.xlsx"

bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# ========== –†–ê–ë–û–¢–ê –° –î–ê–ù–ù–´–ú–ò ==========
def init_data():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–∞ –¥–∞–Ω–Ω—ã—Ö"""
    if not os.path.exists(JSON_FILE):
        with open(JSON_FILE, 'w') as f:
            json.dump([], f)
        logger.info("–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Ñ–∞–π–ª clients.json")

init_data()

def load_clients():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–∑ JSON"""
    with open(JSON_FILE, 'r') as f:
        return json.load(f)

def save_clients(clients):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ JSON"""
    with open(JSON_FILE, 'w') as f:
        json.dump(clients, f, indent=2)

# ========== –ö–õ–ê–í–ò–ê–¢–£–†–´ ==========
def main_keyboard():
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        '‚ûï –î–æ–±–∞–≤–∏—Ç—å', 'üîç –ù–∞–π—Ç–∏',
        'üìã –°–ø–∏—Å–æ–∫', '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
        '‚ùå –£–¥–∞–ª–∏—Ç—å', 'üì§ –≠–∫—Å–ø–æ—Ä—Ç'
    ]
    return markup.add(*buttons, row_width=2)

# ========== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–û–ú–ê–ù–î ==========
@app.route(f'/{TOKEN}', methods=['POST'])
def webhook():
    update = telebot.types.Update.de_json(request.stream.read().decode('utf-8'))
    bot.process_new_updates([update])
    return "OK", 200

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, 
                   "üìí *Client Notes Mario Bot* –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!",
                   reply_markup=main_keyboard(),
                   parse_mode='Markdown')

@bot.message_handler(func=lambda m: m.text == '‚ûï –î–æ–±–∞–≤–∏—Ç—å')
def add_client(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞:", reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(msg, process_add_name)

def process_add_name(message):
    if not message.text.strip():
        bot.send_message(message.chat.id, "‚ùå –ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!", reply_markup=main_keyboard())
        return
    
    client = {'name': message.text}
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    bot.register_next_step_handler(msg, process_add_phone, client)

def process_add_phone(message, client):
    if not message.text.isdigit():
        bot.send_message(message.chat.id, "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä!", reply_markup=main_keyboard())
        return
    
    client['phone'] = message.text
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ:")
    bot.register_next_step_handler(msg, process_add_finish, client)

def process_add_finish(message, client):
    client['description'] = message.text
    clients = load_clients()
    clients.append(client)
    save_clients(clients)
    bot.send_message(message.chat.id, "‚úÖ –ö–ª–∏–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω!", reply_markup=main_keyboard())

# [–ê–Ω–∞–ª–æ–≥–∏—á–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö –∫–Ω–æ–ø–æ–∫...]

# ========== –ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê ==========
if __name__ == '__main__':
    logger.info("–°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π –≤–µ–±—Ö—É–∫...")
    bot.remove_webhook()
    time.sleep(1)
    
    logger.info(f"–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –≤–µ–±—Ö—É–∫: {WEBHOOK_URL}")
    bot.set_webhook(url=WEBHOOK_URL)
    
    logger.info("–ó–∞–ø—É—Å–∫–∞–µ–º production-—Å–µ—Ä–≤–µ—Ä...")
    serve(app, host="0.0.0.0", port=10000)
