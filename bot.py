from flask import Flask, request
from telebot.types import BotCommand
import telebot
import os
from waitress import serve

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TOKEN = "7598214399:AAG18_9UqZoIys83qQalyXhAmhhvofZficA"
SERVICE_NAME = "client-notes-bot"
WEBHOOK_URL = f"https://{SERVICE_NAME}.onrender.com/{TOKEN}"

bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –º–µ–Ω—é
bot.set_my_commands([
    BotCommand("add", "‚ûï –î–æ–±–∞–≤–∏—Ç—å"),
    BotCommand("find", "üîç –ù–∞–π—Ç–∏"),
    BotCommand("list", "üìã –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤"),
    BotCommand("edit", "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"),
    BotCommand("delete", "üóë –£–¥–∞–ª–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞")
])

# –ü—Ä–æ—Å—Ç–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è (–¥–ª—è –ø—Ä–∏–º–µ—Ä–∞)
clients = {}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, "üëã –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω!\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏–∑ –º–µ–Ω—é –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /add —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞.")

# –î–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞
@bot.message_handler(commands=['add'])
def add_client(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞, –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∏–∂–∫–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é:")
    bot.register_next_step_handler(msg, save_client)

def save_client(message):
    try:
        name, phone, description = [x.strip() for x in message.text.split(',')]
        clients[phone[-4:]] = {
            'name': name,
            'phone': phone,
            'description': description
        }
        bot.send_message(message.chat.id, f"‚úÖ –ö–ª–∏–µ–Ω—Ç {name} –¥–æ–±–∞–≤–ª–µ–Ω!")
    except:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –û—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: –∏–º—è, –Ω–æ–º–µ—Ä, –æ–ø–∏—Å–∞–Ω–∏–µ")

# –ù–∞–π—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞
@bot.message_handler(commands=['find'])
def find_client(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã –Ω–æ–º–µ—Ä–∞ –∫–ª–∏–µ–Ω—Ç–∞:")
    bot.register_next_step_handler(msg, search_client)

def search_client(message):
    key = message.text.strip()
    client = clients.get(key)
    if client:
        bot.send_message(message.chat.id, f"üë§ –ö–ª–∏–µ–Ω—Ç: {client['name']}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: {client['phone']}\n‚úÇÔ∏è –°—Ç—Ä–∏–∂–∫–∞: {client['description']}")
    else:
        bot.send_message(message.chat.id, "‚ùå –ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")

# –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö
@bot.message_handler(commands=['list'])
def list_clients(message):
    if not clients:
        bot.send_message(message.chat.id, "üì≠ –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø—É—Å—Ç.")
        return
    text = "üìã –ö–ª–∏–µ–Ω—Ç—ã:\n"
    for c in clients.values():
        text += f"- {c['name']} ({c['phone']})\n"
    bot.send_message(message.chat.id, text)

# –£–¥–∞–ª–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞
@bot.message_handler(commands=['delete'])
def delete_client(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã –Ω–æ–º–µ—Ä–∞ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:")
    bot.register_next_step_handler(msg, do_delete)

def do_delete(message):
    key = message.text.strip()
    if clients.pop(key, None):
        bot.send_message(message.chat.id, f"‚úÖ –ö–ª–∏–µ–Ω—Ç —Å –æ–∫–æ–Ω—á–∞–Ω–∏–µ–º {key} —É–¥–∞–ª—ë–Ω.")
    else:
        bot.send_message(message.chat.id, "‚ùå –ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")

# Webhook –∏ –∑–∞–ø—É—Å–∫ Flask
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    update = telebot.types.Update.de_json(request.stream.read().decode("utf-8"))
    bot.process_new_updates([update])
    return "OK", 200

@app.route("/")
def home():
    return "ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç."

if __name__ == "__main__":
    bot.remove_webhook()
    bot.set_webhook(url=WEBHOOK_URL)
    serve(app, host="0.0.0.0", port=10000)
