from flask import Flask, request
import telebot
from telebot import types
import os
import time
import json
from waitress import serve

# === –ö–æ–Ω—Ñ–∏–≥ ===
TOKEN = "7598214399:AAG18_9UqZoIys83qQalyXhAmhhvofZficA"
SERVICE_NAME = "client-notes-bot"
WEBHOOK_URL = f"https://{SERVICE_NAME}.onrender.com/{TOKEN}"
DATA_FILE = "clients.json"

bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# –í–µ–±—Ö—É–∫
bot.remove_webhook()
time.sleep(1)
bot.set_webhook(url=WEBHOOK_URL)

# === –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ===
def load_clients():
    if os.path.exists(DATA_FILE):
        with open(DATA_FILE, "r") as f:
            return json.load(f)
    return []

def save_clients(clients):
    with open(DATA_FILE, "w") as f:
        json.dump(clients, f, ensure_ascii=False, indent=2)

# === –ö–æ–º–∞–Ω–¥—ã ===
@bot.message_handler(commands=['start'])
def start_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("/add"), types.KeyboardButton("/find"))
    bot.send_message(message.chat.id, "‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

@bot.message_handler(commands=['add'])
def add_client(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n–ò–º—è, –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã –Ω–æ–º–µ—Ä–∞, –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∏–∂–∫–∏")
    bot.register_next_step_handler(message, save_client_data)

def save_client_data(message):
    try:
        name, last4, desc = [x.strip() for x in message.text.split(",", 2)]
        clients = load_clients()
        clients.append({"name": name, "last4": last4, "desc": desc})
        save_clients(clients)
        bot.send_message(message.chat.id, f"‚úÖ –ö–ª–∏–µ–Ω—Ç {name} —Å–æ—Ö—Ä–∞–Ω—ë–Ω!")
    except:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –û—à–∏–±–∫–∞! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–æ—Ä–º–∞—Ç: –ò–º—è, 1234, –æ–ø–∏—Å–∞–Ω–∏–µ")

@bot.message_handler(commands=['find'])
def find_client(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã –Ω–æ–º–µ—Ä–∞ –∫–ª–∏–µ–Ω—Ç–∞:")
    bot.register_next_step_handler(message, search_client)

def search_client(message):
    last4 = message.text.strip()
    clients = load_clients()
    found = [c for c in clients if c["last4"] == last4]
    if found:
        for client in found:
            bot.send_message(message.chat.id,
                f"üë§ {client['name']}\nüìû ...{client['last4']}\n‚úÇÔ∏è {client['desc']}")
    else:
        bot.send_message(message.chat.id, "‚ùå –ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")

# === –í–µ–±—Ö—É–∫ ===
@app.route(f'/{TOKEN}', methods=['POST'])
def webhook():
    update = telebot.types.Update.de_json(request.stream.read().decode('utf-8'))
    bot.process_new_updates([update])
    return "OK", 200

@app.route('/')
def home():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ production-—Å–µ—Ä–≤–µ—Ä!"

if __name__ == '__main__':
    serve(app, host="0.0.0.0", port=10000)
